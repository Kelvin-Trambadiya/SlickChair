GET     /                              controllers.About.login
GET     /about                         controllers.About.about
GET     /assets/*file                  controllers.Assets.at(path="/public", file)

GET     /submission                    controllers.Submitting.submit
POST    /submission                    controllers.Submitting.doSubmit
GET     /submission/info/:id           controllers.Submitting.info(id: IdType)
GET     /submission/edit/:id           controllers.Submitting.edit(id: IdType)
POST    /submission/edit/:id           controllers.Submitting.doEdit(id: IdType)

GET     /review/papers                 controllers.Reviewing.papers
GET     /review/bid                    controllers.Reviewing.bid
POST    /review/bid                    controllers.Reviewing.doBid
GET     /review/:id                    controllers.Reviewing.review(id: IdType)
POST    /review/:id                    controllers.Reviewing.doReview(id: IdType)
POST    /review/:id/edit/:pid          controllers.Reviewing.editReview(id: IdType, pid: IdType)
POST    /review/:id/comment            controllers.Reviewing.doComment(id: IdType)
POST    /review/:paperId/edit/:commentId/:personId  controllers.Reviewing.editComment(paperId: IdType, commentId: IdType, personId: IdType)

GET     /chair/sql                     controllers.Sql.query
POST    /chair/sql                     controllers.Sql.doQuery
# GET     /email                         controllers.Emailing.form
# POST    /email                         controllers.Emailing.send
# GET     /manage-members                controllers.MembersManaging.page
# POST    /manage-members                controllers.MembersManaging.handle
# GET     /auctions                      controllers.Chair.auctions
# GET     /config                        controllers.Chair.config
# GET     /decisions                     controllers.Chair.decisions
# GET     /dashboard                     controllers.Chair.dashboard

GET     /file/:id                      controllers.FileServing.apply(id: IdType)

# SecureSocial
GET     /login                  securesocial.controllers.LoginPage.login
POST    /login                  controllers.LoginWrapper.dispatch
GET     /logout                 securesocial.controllers.LoginPage.logout
GET     /signup/:token          securesocial.controllers.Registration.signUp(token)
POST    /signup/:token          securesocial.controllers.Registration.handleSignUp(token)
GET     /reset/:token           securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token           securesocial.controllers.Registration.handleResetPassword(token)
GET     /authenticate/:provider securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized         securesocial.controllers.ProviderController.notAuthorized

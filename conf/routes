GET     /                       controllers.About.login
GET     /about                  controllers.About.about
GET     /loginDispatch          controllers.About.loginDispatch
GET     /assets/*file           controllers.Assets.at(path="/public", file)
GET     /disabled               controllers.Submitting.disabled

GET     /submission             controllers.Submitting.submit
POST    /submission             controllers.Submitting.doSubmit
GET     /submission/info/:id    controllers.Submitting.info(id: Id[Paper])
GET     /submission/edit/:id    controllers.Submitting.edit(id: Id[Paper])
POST    /submission/edit/:id    controllers.Submitting.doEdit(id: Id[Paper])
GET     /submission/withdraw/:id  controllers.Submitting.withdraw(id: Id[Paper])

GET     /review/submissions     controllers.Reviewing.submissions
GET     /review/bid             controllers.Reviewing.bid
POST    /review/bid             controllers.Reviewing.doBid
GET     /review/:id             controllers.Reviewing.review(id: Id[Paper])
POST    /review/:id             controllers.Reviewing.doReview(id: Id[Paper])
POST    /review/:id/edit/:pid   controllers.Reviewing.editReview(id: Id[Paper], pid: Id[Person])
POST    /review/:id/comment     controllers.Reviewing.doComment(id: Id[Paper])
# POST    /review/:paperId/edit/:commentId/:personId  controllers.Reviewing.editComment(paperId: Id[Paper], commentId: Id[Comment], personId: Id[Person])

GET     /chair/sql              controllers.Sql.query
POST    /chair/sql              controllers.Sql.doQuery
GET     /chair/assignment       controllers.Chairing.assignmentList
GET     /chair/decision         controllers.Chairing.decision
POST    /chair/doDecision       controllers.Chairing.doDecision
GET     /chair/submissions      controllers.Chairing.submissions
GET     /chair/roles            controllers.Chairing.roles
POST    /chair/roles            controllers.Chairing.doRoles
GET     /chair/phases           controllers.Chairing.phases
POST    /chair/phases           controllers.Chairing.doPhases
POST    /chair/jumpToPhase      controllers.Chairing.jumpToPhase

GET     /chair/assign/:id       controllers.Chairing.assign(id: Id[Paper])
POST    /chair/assign/:id       controllers.Chairing.doAssign(id: Id[Paper])
GET     /chair/info/:id         controllers.Chairing.info(id: Id[Paper])
GET     /chair/edit/:id         controllers.Chairing.edit(id: Id[Paper])
POST    /chair/edit/:id         controllers.Chairing.doEdit(id: Id[Paper])
GET     /chair/withdraw/:id     controllers.Chairing.toggleWithdraw(id: Id[Paper])
GET     /chair/comment/:id      controllers.Chairing.comment(id: Id[Paper])
POST    /chair/comment/:id      controllers.Chairing.doComment(id: Id[Paper])

# GET     /email                 controllers.Emailing.form
# POST    /email                 controllers.Emailing.send
# GET     /manage-members        controllers.MembersManaging.page
# POST    /manage-members        controllers.MembersManaging.handle
# GET     /auctions              controllers.Chair.auctions
# GET     /config                controllers.Chair.config
# GET     /decisions             controllers.Chair.decisions
# GET     /dashboard             controllers.Chair.dashboard

GET     /file/:id               controllers.FileServing.apply(id: Id[File])

# SecureSocial
GET     /login                  securesocial.controllers.LoginPage.login
POST    /login                  controllers.LoginWrapper.dispatch
GET     /logout                 securesocial.controllers.LoginPage.logout
GET     /signup/:token          securesocial.controllers.Registration.signUp(token)
POST    /signup/:token          securesocial.controllers.Registration.handleSignUp(token)
GET     /reset/:token           securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token           securesocial.controllers.Registration.handleResetPassword(token)
GET     /authenticate/:provider securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized         securesocial.controllers.ProviderController.notAuthorized

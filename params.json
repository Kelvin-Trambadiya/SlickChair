{"name":"Slickchair","tagline":"Conference Management System","body":"# SlickChair\r\n\r\nSlickChair is an open-source conference management system written in Scala. Built with the Play framework and the Slick database access library, SlickChair provides a highly flexible and extensible solution to manage a peer review process. Lear more about SlickChair internals on the [project report](https://github.com/OlivierBlanvillain/SlickChair-report/blob/master/report/main.pdf).\r\n\r\n\r\n## What Makes It Different?\r\n\r\n- **Simple authentication.** SlickChair allows to login in one click using a Facebook or Google account in addition to the traditional email and password authentication. We made thing very simple here: one user equals one email!\r\n\r\n- **Extensible workflow.** By default, the peer review process is organised in seven phases: *Setup, Submission, Bidding, Assignment, Review, Notification* and *Finished*. Workflow customisation such as adding an *Abstract Submission* phase or merging *Submission* and *Bidding* are very easy to make.\r\n\r\n- **Full control over your data.** SlickChair instances are completely autonomous, which means that you get the option to deploy yours on a local server with a private database.\r\n\r\n\r\n## Show Me A Demo!\r\n\r\nRunning the demo locally requires [JDK 6+](http://www.oracle.com/technetwork/java/javase/downloads/index.html) and [sbt](http://www.scala-sbt.org/). Then it's as simple as:\r\n\r\n    sbt run\r\n\r\nCheck out the [README](https://github.com/SlickChair/SlickChair) for detailed instructions on how to deploy SlickChair on Heroku or on your own server.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}